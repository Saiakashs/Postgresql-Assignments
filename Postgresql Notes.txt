//inner join

select  c.customer_id,c.first_name,
c.last_name,p.amount,p.payment_date
from customer c join payment p 
on c.customer_id=p.customer_id
order by payment_date
limit 5;

select  c.first_name || ' '||c.last_name as "customer name",
s.first_name || ' '||s.last_name as "staff name",
p.amount,p.payment_date
from customer c join payment p 
on c.customer_id=p.customer_id
inner join staff s using(staff_id)
order by payment_date
limit 5;

select  c.first_name || ' '||c.last_name as "customer name",
s.first_name || ' '||s.last_name as "staff name",
p.amount,p.payment_date,r.inventory_id
from customer c join payment p 
on c.customer_id=p.customer_id
inner join staff s using(staff_id)
inner join rental r using(staff_id)
order by payment_date
limit 5;


//left join

select f.film_id,f.title,
i.inventory_id
from film f left join inventory i
on f.film_id=i.film_id
order by title
limit 5;

select f.film_id,f.title,
i.inventory_id
from film f left join inventory i
on f.film_id=i.film_id
where i.inventory_id is null
order by title
limit 5;


//right join

select f.film_id,f.title,
i.inventory_id
from film f right join inventory i
on f.film_id=i.film_id
where i.inventory_id is null
order by title
limit 5;

//self join

select f1.title,f2.title,f1.length
from film f1 inner join film f2
on f1.length=f2.length;

select f1.title,f2.title,f1.length
from film f1 inner join film f2
on f1.length=f2.length
where f1.title!=f2.title;

//group by

select customer_id,count(customer_id) as "no of orders" from payment
group by customer_id;

select customer_id,count(customer_id) as "no of orders",sum(amount) as "payment" from payment
group by customer_id;

select customer_id,count(customer_id) as "no of orders",sum(amount) as "payment" from payment
where payment_date > '2007-02-16'
group by customer_id;

select customer_id,count(customer_id) as "no of orders",sum(amount) as "payment" from payment
where payment_date > '2007-02-16'
group by customer_id
having sum(amount) > 100
order by payment;


select  c.first_name || ' '||c.last_name as "customer name",
c.customer_id,count(c.customer_id) "total orders",
sum(amount) as total_payments
from payment p inner join customer c
on c.customer_id=p.customer_id
where payment_date > '2007-02-16'
group by c.customer_id
having sum(amount) > 100
order by total_payments
limit 10 offset 5;

select staff_id,customer_id,sum(amount) 
from payment
group by staff_id,customer_id;

select staff_id,customer_id,count(customer_id),sum(amount) 
from payment
group by staff_id,customer_id;


//grouping sets

select 
staff_id,
customer_id,
sum(amount)
from payment
group by
grouping sets(
(customer_id,staff_id),
(staff_id),
(customer_id),
()
);




select 
grouping(customer_id),
grouping(staff_id),
customer_id,
staff_id,
sum(amount)
from payment
group by
grouping sets(
(customer_id),
(staff_id),
()
)
order by customer_id,staff_id;


//rollup


select 
extract(YEAR from rental_date) y,
extract(MONTH from rental_date) m,
extract(DAY from rental_date) d,
count(rental_id)
from rental
group by 
rollup(extract(YEAR from rental_date),
extract(MONTH from rental_date),
extract(DAY from rental_date)
);


//cube


select customer_id,staff_id,
sum(amount)
from payment
group by 
customer_id,
cube(staff_id)
order by customer_id,staff_id;

select customer_id,staff_id,
sum(amount)
from payment
group by 
staff_id,
cube(customer_id)
order by customer_id,staff_id;

//cte 


with action_films as (
select f.title,
f.length
from film f
inner join film_category fc using (film_id)
inner join category c using (Category_id)
where c.name='Action')
select * from action_films;



with film_stats as (
-- CTE 1 calculate film statistics
select 
    avg(rental_rate) as avg_rental_rate,
    max(length) as max_length,
    min(length) as min_length
from film),
customer_stats as (
-- CTE 2 calculate customer statistics
select 
    count(distinct customer_id) as total_customers,
    sum(amount) as total_payments
    from payment
)
-- Main Query using the CTEs
select round((select avg_rental_rate from film_stats),2) as avg_film_rental,
(select max_length from film_stats) as max_film_length,
(select min_length from film_stats) as min_film_length,
(select total_customers from customer_stats) as total_customers,
(select total_payments from customer_stats) as total_payments;



select 
title,
length,
case when length>0
and length<=50 then 'Short' when length>50 
and length<=120 then 'Medium' when length>120 then 'Long'
end duration
from film 
order by title;



select 
sum(
    case when rental_rate=0.99 then 1 else 0 end
    ) as "Economy",
sum(
    case when rental_rate=2.99 then 1 else 0 end 
    ) as "Mass",
sum(
    case when rental_rate=4.99 then 1 else 0 end 
    ) as "Premium"
from film;
 